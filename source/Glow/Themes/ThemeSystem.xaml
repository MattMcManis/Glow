<!-- 
    Glow
    Copyright (C) 2017, 2018 Matt McManis
    http://github.com/MattMcManis/Glow
    http://glowmpv.github.io
    mattmcmanis@outlook.com

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.If not, see<http://www.gnu.org/licenses/> . 
 -->

<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--/////////////////////////////////////
         Main Window Default
        /////////////////////////////////////-->

    <!-- Main Window Template -->
    <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
            <Grid>
                <AdornerDecorator>
                    <ContentPresenter/>
                </AdornerDecorator>
                <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                    <Condition Property="WindowState" Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>



    <!--/////////////////////////////////////
        ToolTip
        /////////////////////////////////////-->
    <Style TargetType="ToolTip">

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel>
                        <TextBlock Text="{Binding}"
                         Width="300"
                         TextWrapping='Wrap' />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--/////////////////////////////////////
        Button Images Black
        /////////////////////////////////////-->

    <!-- Info Button -->
    <Style x:Key="ButtonInfo" TargetType="{x:Type Image}">
        <Setter Property="FlowDirection" Value="LeftToRight"/>
        <Setter Property="Source" Value="../Resources/Images/Buttons/Black/info.png"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Website Button -->
    <Style x:Key="ButtonWebsite" TargetType="{x:Type Image}">
        <Setter Property="FlowDirection" Value="LeftToRight"/>
        <Setter Property="Source" Value="../Resources/Images/Buttons/Black/web.png"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Settings Button -->
    <Style x:Key="ButtonSettings" TargetType="{x:Type Image}">
        <Setter Property="FlowDirection" Value="LeftToRight"/>
        <Setter Property="Source" Value="../Resources/Images/Buttons/Black/settings.png"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Update Button -->
    <Style x:Key="ButtonUpdate" TargetType="{x:Type Image}">
        <Setter Property="FlowDirection" Value="LeftToRight"/>
        <Setter Property="Source" Value="../Resources/Images/Buttons/Black/update.png"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Config Folder Button -->
    <Style x:Key="ButtonConfigFolder" TargetType="{x:Type Image}">
        <Setter Property="FlowDirection" Value="LeftToRight"/>
        <Setter Property="Source" Value="../Resources/Images/Buttons/Black/folder.png"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Delete Button -->
    <Style x:Key="ButtonDelete" TargetType="{x:Type Image}">
        <Setter Property="FlowDirection" Value="LeftToRight"/>
        <Setter Property="Source" Value="../Resources/Images/Buttons/Black/delete.png"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Import Button -->
    <Style x:Key="ButtonImport" TargetType="{x:Type Image}">
        <Setter Property="FlowDirection" Value="LeftToRight"/>
        <Setter Property="Source" Value="../Resources/Images/Buttons/Black/import.png"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Export Button -->
    <Style x:Key="ButtonExport" TargetType="{x:Type Image}">
        <Setter Property="FlowDirection" Value="LeftToRight"/>
        <Setter Property="Source" Value="../Resources/Images/Buttons/Black/export.png"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Revert Arrow Button -->
    <Style x:Key="ButtonRevertArrow" TargetType="{x:Type Image}">
        <Setter Property="FlowDirection" Value="LeftToRight"/>
        <Setter Property="Source" Value="../Resources/Images/Buttons/Black/revertarrow.png"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Color Picker Button -->
    <!--<Style x:Key="ButtonColorPicker" TargetType="{x:Type Image}">
        <Setter Property="FlowDirection" Value="LeftToRight"/>
        <Setter Property="Source" Value="Resources/Images/Buttons/Black/colorpicker.png"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->

</ResourceDictionary>